============= MarkDown ===============
* 标题： #=-
* 换行: 2空2回3-
* 列表：*+-    1.
* 字体：*+-

* 引用：>`.
* 链接: [text|url]   !#:
* 其它：转义，注释，制表
* 版本：{color}{quote}

=========== Search ==================
搜命令：
which {command}
where /R {path} {pattern}

搜文件:
find -name "query"
dir /s *.xls 

搜字串：
grep -R  "what" "where"
findstr(find) "what" "where" 


搜库(比普通grep更快)：
git log --author=Jon
git log --grep=JF-7813

git ls-files "*middleware*"
git ls-files -v |grep "^S"

git grep -n "hello" v2.5
git grep solution -- :^Documentation

=====================================
VIM:
By words: web
By paragraph: {}
By marker: mx   'x   
By last: ''	  '.  
other: gg G %  0$%

* Edit: dxyp  u. > o 3x 3p 3dd 3. dw
* Search: /?  *#   nN  (:set hlsearch)
* Replace: :%s/foo/bar/g

* gd & gD  - go to definition of local(global) symbol under cursor;
* ^N (in insert mode) automatic word completion   Ctrl+P  Ctrl+N

vim  filename +546
vim  filename +/main
notepad++ filename -n1500
========================================
AWK
awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。
简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。

awk '{pattern + action}' {filenames}
awk -F: '/root/{print $7"\t"}' /etc/passwd    
指定分隔符， 指定正则，指定动作，指定路径
花括号里面其实是C语言,printf可以用awk内置变量

